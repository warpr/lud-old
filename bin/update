#!/usr/bin/env php
<?php

$musicRoot = realpath(dirname(__FILE__) . '/../www/music/');
$cacheDir = realpath(dirname(__FILE__) . '/../www/cache/');

function isAlbumFolder($current, $key, $iterator) {
    // Skip hidden files and directories.
    if ($current->getFilename()[0] === '.') {
        return false;
    }

    if ($current->isDir()) {
        return true;
    }

    // FIXME: something may be needed here to prevent infinite loops
    /* if ($current->isDir()) { */
    /*     // Only recurse into intended subdirectories. */
    /*     return $current->getFilename() === 'wanted_dirname'; */
    /* } */

    if ($current->getFilename() === 'metadata.json') {
        return is_readable(realpath($current->getPathname()));
    }
}

function parseArtist($obj) {
    if (empty($obj) || empty($obj['artist-credit'])) {
        return [];
    }

    $artists = [];
    $credited = [];

    foreach ($obj['artist-credit'] as $credit) {
        $doc = [
            'artist' => array_unique([$credit['artist']['name'], $credit['artist']['sort-name']]),
            'type' => 'artist'
        ];

        $credited[] = [
            'artist' => $credit['name'],
            'id' => $credit['artist']['id'],
            'joinphrase' => $credit['joinphrase']
        ];

        $artists[$credit['artist']['id']] = $doc;
    }

    return [$artists, $credited];
}

function parseRelease($obj) {
    $summary = ['type' => 'release'];

    if (empty($obj)) {
        return $summary;
    }

    $fields = ['date', 'title'];
    foreach ($fields as $f) {
        if (!empty($obj[$f])) {
            $summary[$f] = $obj[$f];
        }
    }

    return $summary;
}

function parseMedia($obj) {
    if (empty($obj)) {
        return [];
    }

    $media = [];
    foreach ($obj['media'] as $medium) {
        if (!empty($medium['title'])) {
            $media[] = $medium['title'];
        }
    }

    return $media;
}

function parseTracks($obj) {
    $tracks = [];

    if (empty($obj)) {
        return $tracks;
    }

    $allArtists = [];
    foreach ($obj['media'] as $medium) {
        foreach ($medium['tracks'] as $trk) {
            $song = [
                'length' => $trk['length'],
                'title' => $trk['title'],
            ];

            if (!empty($trk['artist-credit'])) {
                list($artists, $credited) = parseArtist($trk);
            } else if (!empty($trk['recording']['artist-credit'])) {
                list($artists, $credited) = parseArtist($trk);
            }
            $allArtists = array_merge($allArtists, $artists);

            $song['credit'] = $credited;
            $tracks[$trk['id']] = $song;
        }
    }

    return [$allArtists, $tracks];
}

function indexAlbum(&$db, $dir) {
    // FIXME: make robust against parse errors
    $metadata = json_decode(file_get_contents("$dir/metadata.json"), true);

    $release = parseRelease($metadata);
    if (empty($release)) {
        return;
    }

    list($artists, $credited) = parseArtist($metadata);
    $release['credit'] = $credited;

    foreach ($artists as $key => $val) {
        $db['artists'][$key] = $val;
    }

    $media = parseMedia($metadata);
    if (!empty($media)) {
        $release['disc'] = $media;
    }

    $db['releases'][$metadata['id']] = $release;

    echo "Indexed " . $release['title'] . "\n";

    list($artists, $tracks) = parseTracks($metadata);
    foreach ($artists as $key => $val) {
        $db['artists'][$key] = $val;
    }

    foreach ($tracks as $key => $val) {
        $db['tracks'][$key] = $val;
    }
}

function main($root) {
    global $cacheDir;

    $db = [
        "artists" => [],
        "releases" => [],
        "tracks" => [],
    ];

    $dir = new RecursiveDirectoryIterator($root);
    $filter = new RecursiveCallbackFilterIterator($dir, isAlbumFolder);
    $iterator = new RecursiveIteratorIterator($filter);
    $files = array();
    foreach ($iterator as $info) {
        indexAlbum($db, $info->getPath());
        $files[] = $info->getPath();
    }

    foreach ($db as $key => $data) {
        $filename = $cacheDir . "/$key.json";

        file_put_contents(
            $filename,
            json_encode($data, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE));

        echo "$key index saved at " . $filename . "\n";
    }
}

/**
 * Current final database structure:
 *
 * {
 *   "artists": {
 *     :id => [ list, of, one, or, more, names ]
 *   }
 *   "releases": {
 *     :id => {
 *         "date" => date,
 *         "title" => title,
 *         "by" => [ list of credits, where each credit is:
 *             [ name, id ]
 *          ]
 *     }
 *   }
 * }
 */
main($musicRoot);
